version: 2.1
commands:
  dockerhub-login:
    description: "Connect to DockerHub"
    steps:
      - run:
          name: Login to DockerHub
          command: |
            if [ -n "${DOCKERHUB_LOGIN}" ]; then
              docker login -u ${DOCKERHUB_LOGIN} -p ${DOCKERHUB_PASS}
            else
              echo "WARNING: dockerhub login not found. Assuming this is a PR or other external branch build."
            fi

jobs:

  setup-dct:
    description: Setup Docker Content Trust
    docker:
      - image: circleci/golang:1.17
    steps:
      - run:
          command: |
            echo "export DOCKER_CONTENT_TRUST=1" >> $BASH_ENV
            echo "export DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE=\"$DCT_REPO_OPERATOR_KEY_PASSPHRASE\"" >> $BASH_ENV

  sign-image:
    description: Sign Docker Image
    docker:
      - image: circleci/golang:1.17
    parameters:
      image-tag:
        type: string
    steps:
      - run:
          command: |
            KEY_FOLDER=~/.docker/trust/private
            mkdir -p $KEY_FOLDER
            echo "$DCT_REPO_OPERATOR_KEY" | base64 -d > $KEY_FOLDER/$DCT_REPO_OPERATOR_KEY_NAME.key
            chmod 600 $KEY_FOLDER/*
            docker trust key load $KEY_FOLDER/$DCT_REPO_OPERATOR_KEY_NAME.key
            docker trust sign docker push opennms/operator:<< parameters.image-tag >>

  unit-tests:
    description: Unit Tests
    docker:
      - image: circleci/golang:1.17
    steps:
      - checkout
      - run:
         command: make unit-test

  build-image:
    description: Build Docker Image
    docker:
      - image: circleci/golang:1.17
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Docker build
          command: |
            docker build -t opennms/operator:${CIRCLE_SHA1} .

  push-image:
    description: Push Docker Image
    docker:
      - image: circleci/golang:1.17
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - dockerhub-login
      - run:
          name: Docker push
          command: |
            docker tag opennms/operator:${CIRCLE_SHA1} opennms/operator:${CIRCLE_TAG}
            docker push opennms/operator:latest
            docker push opennms/operator:${CIRCLE_TAG}

workflows:
  build:
    jobs:
      - setup-dct:
          context: docker-content-trust

      - unit-tests

      - build-image:
          requires: [ unit-tests, setup-dct ]

      - sign-image:
          requires: [ build-image ]
          image-tag: ${CIRCLE_SHA1}
          context: docker-content-trust

      - push-image:
          requires: [ sign-image ]
          filters:
            branches: { only: "master" }
            tags: { only: "/(v[0-9].[0-9].[0-9])(-[a-zA-Z]+)?/" }

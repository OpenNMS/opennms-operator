apiVersion: apps/v1
kind: Deployment
metadata:
  name: stunnel
  namespace: {{ .Values.Namespace }}
  labels:
    app: stunnel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stunnel
  template:
    metadata:
      labels:
        app: stunnel
    spec:
      {{ if .Values.NodeRestrictions.Enabled }}
      tolerations:
        - effect: "NoSchedule"
          key: "{{ .Values.NodeRestrictions.Key }}"
          operator: "Equal"
          value: {{ .Values.NodeRestrictions.Value }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: "{{ .Values.NodeRestrictions.Key }}"
                operator: In
                values:
                - {{ .Values.NodeRestrictions.Value }}
      {{ end }}
      containers:
      - name: stunnel
        image: {{ .Values.Stunnel.Image }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 61616
        env:
          - name: STUNNEL_SERVICE
            value: "activemq"
          - name: STUNNEL_ACCEPT
            value: "61616"
          - name: STUNNEL_CONNECT
            value: "opennms:61616"
          - name: STUNNEL_KEY
            value: "/certificate/tls.key"
          - name: STUNNEL_CRT
            value: "/certificate/tls.crt"
        {{ if not .Values.TestDeploy }}
        command: ['/bin/sh', '/runtime/entry.sh']
        {{ end }}
        resources:
          requests:
            cpu: "10m"
            memory: "20Mi"
          limits:
            cpu: "1000m"
            memory: "512Mi"
{{ if not .Values.TestDeploy }}
        volumeMounts:
        - name: certificate
          mountPath: /certificate
        - name: runtime
          mountPath: /runtime
      volumes:
        - name: certificate
          secret:
            secretName: wildcard
        - name: runtime
          configMap:
            name: stunnel-runtime
{{ end }}


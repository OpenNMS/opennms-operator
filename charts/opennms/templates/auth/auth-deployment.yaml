apiVersion: apps/v1
kind: Deployment
metadata:
  name: onms-auth
  namespace: {{ .Values.Namespace }}
  labels:
    app: onms-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: onms-auth
  template:
    metadata:
      labels:
        app: onms-auth
    spec:
      {{ if .Values.NodeRestrictions.Enabled }}
      tolerations:
        - effect: "NoSchedule"
          key: "{{ .Values.NodeRestrictions.Key }}"
          operator: "Equal"
          value: {{ .Values.NodeRestrictions.Value }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: "{{ .Values.NodeRestrictions.Key }}"
                operator: In
                values:
                - {{ .Values.NodeRestrictions.Value }}
      {{ end }}
      containers:
      - name: onms-auth
        image: {{ .Values.Auth.Image }}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.Auth.Port }}
        env:
          - name: ADMIN_PASS
            valueFrom:
              secretKeyRef:
                name: onms-initial-creds
                key: admin
          - name: ALLOWED_USERS
            valueFrom:
              secretKeyRef:
                name: onms-allowed-users
                key: users
          - name: GRAFANA_HOST
            value: "grafana"
          - name: GRAFANA_PORT
            value: "3000"
          - name: OPENNMS_HOST
            value: opennms
          - name: OPENNMS_PORT
            value: "8980"
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
          limits:
            cpu: 100m
            memory: 256Mi

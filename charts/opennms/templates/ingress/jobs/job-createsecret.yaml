apiVersion: batch/v1
kind: Job
metadata:
  name: ingress-nginx-admission-create
  labels:
    app.kubernetes.io/name: ingress-nginx-{{ .Values.Namespace }}
    app.kubernetes.io/instance: ingress-nginx-{{ .Values.Namespace }}
    app.kubernetes.io/component: admission-webhook-{{ .Values.Namespace }}
  namespace: {{ .Values.Namespace }}
spec:
  template:
    metadata:
      name: ingress-nginx-admission-create
      labels:
        app.kubernetes.io/name: ingress-nginx-{{ .Values.Namespace }}
        app.kubernetes.io/instance: ingress-nginx-{{ .Values.Namespace }}
        app.kubernetes.io/component: admission-webhook-{{ .Values.Namespace }}
    spec:
      {{ if .Values.NodeRestrictions.Enabled }}
      tolerations:
        - effect: "NoSchedule"
          key: "{{ .Values.NodeRestrictions.Key }}"
          operator: "Equal"
          value: {{ .Values.NodeRestrictions.Value }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: "{{ .Values.NodeRestrictions.Key }}"
                    operator: In
                    values:
                      - {{ .Values.NodeRestrictions.Value }}
      {{ end }}
      containers:
        - name: create
          image: {{ .Values.Ingress.SecretJobImage }}
          imagePullPolicy: IfNotPresent
          {{ if not .Values.TestDeploy }}
          args:
            - create
            - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.{{ .Values.Namespace }}.svc
            - --namespace={{ .Values.Namespace }}
            - --secret-name=ingress-nginx-admission
          {{ end }}
      restartPolicy: OnFailure
      serviceAccountName: ingress-nginx-admission
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000

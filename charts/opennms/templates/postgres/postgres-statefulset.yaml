apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: postgres
    opennms_cr: {{ .Values.Namespace }}
    role: master
  name: postgres
  namespace: {{ .Values.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  serviceName: postgresql
  template:
    metadata:
      labels:
        app: postgres
        role: master
    spec:
      containers:
        - env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: password

          image: {{ .Values.Postgres.Image }}
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -h
                - localhost
                - -U
                - postgres
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: postgres
          ports:
            - containerPort: 5432
              name: postgresql
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -h
                - localhost
                - -U
                - postgres
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            limits:
              cpu: "2"
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pgdata
              subPath: pgdata
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: pgdata
      spec:
        accessModes: [ ReadWriteOnce ]
        resources:
          requests:
            storage: {{ .Values.Postgres.VolumeSize }}

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.Postgres.ServiceName }}
  name: {{ .Values.Postgres.ServiceName }}
  namespace: {{ .Values.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.Postgres.ServiceName }}
  template:
    metadata:
      labels:
        app: {{ .Values.Postgres.ServiceName }}
        role: master
    spec:
      {{ if .Values.NodeRestrictions.Enabled }}
      tolerations:
        - effect: "NoSchedule"
          key: "{{ .Values.NodeRestrictions.Key }}"
          operator: "Equal"
          value: {{ .Values.NodeRestrictions.Value }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: "{{ .Values.NodeRestrictions.Key }}"
                operator: In
                values:
                - {{ .Values.NodeRestrictions.Value }}
      {{ end }}
      volumes:
        - name: postgres-volume
        - name: postgres-initial-script
          configMap:
            name: postgres-initial-sql
      containers:
        - name: {{ .Values.Postgres.ServiceName }}
          image: {{ .Values.Postgres.Image }}
          imagePullPolicy: Always
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: adminUser
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: adminPwd
            - name: POSTGRES_HOST_AUTH_METHOD
              value: "trust"
          ports:
            - containerPort: 5432
          {{ if not .Values.TestDeploy }}
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -h
                - localhost
                - -U
                - postgres
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 60
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -h
                - localhost
                - -U
                - postgres
            initialDelaySeconds: 10
            periodSeconds: 10
          {{ end }}
          resources:
            limits:
              cpu: "2"
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: postgres-volume
            - mountPath: "/docker-entrypoint-initdb.d/postgres.initial.script.sql"
              name: postgres-initial-script
              subPath: "postgres.initial.script.sql"
            - mountPath: "/docker-entrypoint-initdb.d/postgres.keycloak.initial.script.sql"
              name: postgres-initial-script
              subPath: "postgres.keycloak.initial.script.sql"
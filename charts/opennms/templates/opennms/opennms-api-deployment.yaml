apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.OpenNMS.API.ServiceName }}
  namespace: {{ .Values.Namespace }}
  labels:
    app: {{ .Values.OpenNMS.API.ServiceName }}
    app.kubernetes.io/name: {{ .Values.OpenNMS.API.ServiceName }}
  annotations:
    autoupdate: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.OpenNMS.API.ServiceName }}
  template:
    metadata:
      labels:
        app: {{ .Values.OpenNMS.API.ServiceName }}
    spec:
      {{ if .Values.NodeRestrictions.Enabled }}
      tolerations:
        - effect: "NoSchedule"
          key: "{{ .Values.NodeRestrictions.Key }}"
          operator: "Equal"
          value: {{ .Values.NodeRestrictions.Value }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: "{{ .Values.NodeRestrictions.Key }}"
                    operator: In
                    values:
                      - {{ .Values.NodeRestrictions.Value }}
      {{ end }}
      terminationGracePeriodSeconds: 120
      containers:
        - name: horizon-stream-api
          image: {{ .Values.OpenNMS.ApiImage }}
          imagePullPolicy: Always
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://postgres:5432/horizon_stream"
            - name: KEYCLOAK_AUTH_SERVER_URL
              value: "http://{{ .Values.Keycloak.ServiceName }}:8080"
            - name: KEYCLOAK_REALM
              value: "opennms"
            - name: HORIZON_STREAM_KEYCLOAK_ADMIN_USERNAME
              value: "keycloak-admin"
            - name: HORIZON_STREAM_CORE_URL
              value: "http://{{ .Values.OpenNMS.Core.ServiceName }}:8181"
          ports:
            - containerPort: 9090
          {{ if not .Values.TestDeploy }}
          {{/*  TODO    livenessProbe:*/}}
          {{/*          readinessProbe:*/}}
          {{/*          startupProbe:*/}}
          {{ end }}
          resources:
            limits:
              cpu: "{{ .Values.OpenNMS.API.Resources.Limits.Cpu }}"
              memory: "{{ .Values.OpenNMS.API.Resources.Limits.Memory }}"
            requests:
              cpu: "{{ .Values.OpenNMS.API.Resources.Requests.Cpu }}"
              memory: "{{ .Values.OpenNMS.API.Resources.Requests.Memory }}"
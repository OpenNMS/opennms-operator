apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.OpenNMS.Core.ServiceName }}
  namespace: {{ .Values.Namespace }}
  labels:
    app: {{ .Values.OpenNMS.Core.ServiceName }}
    app.kubernetes.io/name: {{ .Values.OpenNMS.Core.ServiceName }}
  annotations:
    autoupdate: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.OpenNMS.Core.ServiceName }}
  template:
    metadata:
      labels:
        app: {{ .Values.OpenNMS.Core.ServiceName }}
    spec:
      {{ if .Values.NodeRestrictions.Enabled }}
      tolerations:
        - effect: "NoSchedule"
          key: "{{ .Values.NodeRestrictions.Key }}"
          operator: "Equal"
          value: {{ .Values.NodeRestrictions.Value }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: "{{ .Values.NodeRestrictions.Key }}"
                operator: In
                values:
                - {{ .Values.NodeRestrictions.Value }}
      {{ end }}
      terminationGracePeriodSeconds: 120
      containers:
        - name: {{ .Values.OpenNMS.Core.ServiceName }}
          image: {{ .Values.OpenNMS.Core.Image }}
          imagePullPolicy: Always
          {{ if not .Values.TestDeploy }}
          args: [ "-f" ]
          {{ end }}
          env:
            - name: JAVA_TOOL_OPTIONS # Let `skaffold debug` see that this is a jvm container
              value: "-Djava.security.egd=file:/dev/./urandom"
            - name: PGSQL_SERVICE_NAME
              value: {{ .Values.Postgres.ServiceName }}
            - name: PGSQL_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: adminUser
            - name: PGSQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: adminPwd
            - name: KAFKA_BROKER_HOST
              value: "{{ .Values.Kafka.URL }}"
            - name: KAFKA_BROKER_PORT
              value: "9092"
            - name: ACTIVEMQ_BROKER_URL
              value: "tcp://localhost:61616"
            - name: KEYCLOAK_BASE_URL
              #value: "http://{{ .Values.Keycloak.ServiceName }}:8080"
              value: "http://{{ .Values.Keycloak.ServiceName }}:8080"
            - name: KEYCLOAK_ADMIN_USERNAME
              value: "keycloak-admin"
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak
                  key: password
          volumeMounts:
            - name: config-volume
              mountPath: "/opt/horizon-stream/etc/org.opennms.horizon.alarmd.camel.cfg"
              subPath: "useKafka"
            - name: config-volume
              mountPath: "/opt/horizon-stream/etc/org.opennms.horizon.eventd.camel.cfg"
              subPath: "useKafka"
          ports:
            - name: ssh
              containerPort: 8101
            - name: http
              containerPort: 8181
          {{ if not .Values.TestDeploy }}
{{/*    TODO  livenessProbe:*/}}
{{/*          readinessProbe:*/}}
{{/*          startupProbe:*/}}
          {{ end }}
          resources:
            limits:
              cpu: "{{ .Values.OpenNMS.Core.Resources.Limits.Cpu }}"
              memory: "{{ .Values.OpenNMS.Core.Resources.Limits.Memory }}"
            requests:
              cpu: "{{ .Values.OpenNMS.Core.Resources.Requests.Cpu }}"
              memory: "{{ .Values.OpenNMS.Core.Resources.Requests.Memory }}"
      volumes:
        - name: config-volume
          configMap:
            name: opennms-config



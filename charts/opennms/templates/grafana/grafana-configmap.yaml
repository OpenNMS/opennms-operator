apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: prometheus
    meta.helm.sh/release-namespace: prometheus
  labels:
    app.kubernetes.io/instance: prometheus
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 8.0.3
    helm.sh/chart: grafana-6.13.6
  name: grafana
  namespace: {{ .Values.Namespace }}
data:
  grafana.ini: |
    [analytics]
    reporting_enabled = false
    check_for_updates = false
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    [database]
    type = postgres
    host = {{ .Values.Postgres.ServiceName }}
    name = postgres
    user = postgres
    password = {{ .Values.Postgres.AdminPassword }}
    # COMMENT OUT WHEN DONE DEBUGGING
    #[log]
    #level = debug

    #################################### SECURITY ####################################
    [security]
    disable_initial_admin_creation = false

    # Only available in Grafana v6.5+.

    # Disable creation of admin user on first start of Grafana. Default is false.
    admin_user = place_holder_for_k8s_secret

    # The name of the default Grafana Admin user, who has full permissions. Default is admin.
    admin_password = place_holder_for_k8s_secret

    #################################### Server ##############################
    [server]
    # Protocol (http, https, h2, socket)
    protocol = http

    # The ip address to bind to, empty will bind to all interfaces
    http_addr =

    # The http port to use
    http_port = 3000

    # The public facing domain name used to access grafana from a browser
    domain = localhost

    # Redirect to correct domain if host header does not match domain
    # Prevents DNS rebinding attacks
    enforce_domain = false

    # The full public facing url
    root_url = %(protocol)s://%(domain)s:%(http_port)s/grafana

    # Serve Grafana from subpath specified in `root_url` setting. By default it is set to `false` for compatibility reasons.
    serve_from_sub_path = true

    # Log web requests
    router_logging = false

    # the path relative working path
    static_root_path = public

    # enable gzip
    enable_gzip = false

    # https certs & key file
    cert_file =
    cert_key =

    # Unix socket path
    socket = /tmp/grafana.sock

    # CDN Url
    cdn_url =

    # Sets the maximum time in minutes before timing out read of an incoming request and closing idle connections.
    # `0` means there is no timeout for reading the request.
    read_timeout = 0
  opennms-helm-app.yaml: |
    # # config file version
    apiVersion: 1

    apps:
      - type: opennms-helm-app
        disabled: false
    #  - type: raintank-worldping-app
    #    org_id: 1
    #    org_name: Main Org.
    #    jsonData:
    #      apiKey: "API KEY"
  admin.yaml: |
    # config file version
    apiVersion: 1

    # list of default built-in role assignments that should be removed
    #removeDefaultAssignments:
    #  # <string>, must be one of the Organization roles (`Viewer`, `Editor`, `Admin`) or `Grafana Admin`
    #  - builtInRole: "Grafana Admin"
    #    # <string>, must be one of the existing fixed roles
    #    fixedRole: "fixed:permissions:admin"
  opennms-performance.yaml: |
    # config file version
    apiVersion: 1

    # list of datasources to insert/update depending
    # on what's available in the database
    datasources:
       # <string, required> name of the datasource. Required
     - name: OpenNMS Performance
       # <string, required> datasource type. Required
       type: opennms-helm-performance-datasource
       # <string, required> access mode. direct or proxy. Required
       access: proxy
       # <int> org id. will default to orgId 1 if not specified
       orgId: 1
       # <string> url
       url: https://{{ .Values.Namespace }}.devtenant.oaaslite.opennms.com/opennms
       isDefault: false

       # IMPORTANT: Use the secure json data object below instead of basic auth fields above.
       # <map> fields that will be converted to json and stored in json_data
       jsonData:
          httpHeaderName1: "Authorization"
       ## <string> json object of data that will be encrypted.
       secureJsonData:
         httpHeaderValue1: "Basic {{ .Values.Auth.AdminPass }}"
       version: 1
       # <bool> allow users to edit datasources from the UI.
       editable: false
  opennms-flow.yaml: |
    # config file version
    apiVersion: 1

    # list of datasources to insert/update depending
    # on what's available in the database
    datasources:
       # <string, required> name of the datasource. Required
     - name: OpenNMS Flow
       # <string, required> datasource type. Required
       type: opennms-helm-flow-datasource
       # <string, required> access mode. direct or proxy. Required
       access: proxy
       # <int> org id. will default to orgId 1 if not specified
       orgId: 1
       # <string> url
       url: https://{{ .Values.Namespace }}.devtenant.oaaslite.opennms.com/opennms
       isDefault: false

       # IMPORTANT: Use the secure json data object below instead of basic auth fields above.
       # <map> fields that will be converted to json and stored in json_data
       jsonData:
          httpHeaderName1: "Authorization"
       ## <string> json object of data that will be encrypted.
       secureJsonData:
         httpHeaderValue1: "Basic {{ .Values.Auth.AdminPass }}"
       version: 1
       # <bool> allow users to edit datasources from the UI.
       editable: false
  opennms-entities.yaml: |
    # config file version
    apiVersion: 1

    # list of datasources to insert/update depending
    # on what's available in the database
    datasources:
       # <string, required> name of the datasource. Required
     - name: OpenNMS Entities
       # <string, required> datasource type. Required
       type: opennms-helm-entity-datasource
       # <string, required> access mode. direct or proxy. Required
       access: proxy
       # <int> org id. will default to orgId 1 if not specified
       orgId: 1
       # <string> url
       url: https://{{ .Values.Namespace }}.devtenant.oaaslite.opennms.com/opennms
       isDefault: true

       # IMPORTANT: Use the secure json data object below instead of basic auth fields above.
       # <map> fields that will be converted to json and stored in json_data
       jsonData:
          httpHeaderName1: "Authorization"
       ## <string> json object of data that will be encrypted.
       secureJsonData:
         httpHeaderValue1: "Basic {{ .Values.Auth.AdminPass }}"
       version: 1
       # <bool> allow users to edit datasources from the UI.
       editable: false
  datasource-cortex.yaml: |
    # config file version
    apiVersion: 1

    # list of datasources to insert/update depending
    # on what's available in the database
    datasources:
       # <string, required> name of the datasource. Required
     - name: Cortex
       # <string, required> datasource type. Required
       type: prometheus
       # <string, required> access mode. direct or proxy. Required
       access: proxy
       # <int> org id. will default to orgId 1 if not specified
       orgId: 1
       # <string> url
       url: http://cortex.cortex/prometheus
       isDefault: false

       # IMPORTANT: Use the secure json data object below instead of basic auth fields above.
       # <map> fields that will be converted to json and stored in json_data
       jsonData:
          httpHeaderName1: "X-Scope-OrgID"
       ## <string> json object of data that will be encrypted.
       secureJsonData:
         httpHeaderValue1: "{{ .Values.Namespace }}"
       version: 1
       # <bool> allow users to edit datasources from the UI.
       editable: false
  opennms.yaml: |
    # config file version
    apiVersion: 1

    providers:
     - name: 'OpenNMS'
       orgId: 1
       folder: 'OpenNMS'
       type: file
       options:
         path: /var/lib/grafana/dashboards
  opennms-entities.json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "fiscalYearStartMonth": 0,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 3,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "OpenNMS Entities",
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "hiddenSeries": false,
          "id": 2,
          "legend": {
            "alignAsTable": false,
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "8.2.3",
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "repeat": null,
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "entityType": {
                "id": "node",
                "label": "Nodes",
                "queryFunction": "nodes"
              },
              "filter": {
                "clauses": [],
                "limit": 0,
                "orderBy": []
              },
              "limit": 0,
              "orderBy": [],
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Nodes",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "refresh": "",
      "schemaVersion": 31,
      "style": "dark",
      "tags": [
        "kubernetes"
      ],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "browser",
      "title": "OpenNMS Entities"
    }
